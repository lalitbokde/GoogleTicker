@model CpaTicker.Areas.admin.Classes.Affiliate

@{
    Layout = null;
    ViewBag.hash = Url.Action("Index");
    ViewBag.Title = "Edit";
    IQueryable<CpaTicker.Areas.admin.Classes.State> states = ViewBag.States; 
}
    
<div class="row tspark">
	@Html.Partial("_Sparks")
</div>


<section id="widget-grid">

    <div class="row">

        <div class="table-section col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="table-content">
                <div class="table-title">Edit Affiliate</div>

                <!-- NEW COL START -->
                <article>

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">

                                @using (Html.BeginForm("edit", "affiliate", FormMethod.Post, new { @id = "editaffiliate", @class = "smart-form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)


                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.AffiliateId)
                                    @Html.HiddenFor(model => model.CustomerId)

                                    <footer>
                                        <button class="btn btn-primary" type="submit" id="submit_button"> <i class="fa fa-save"></i> Save Affiliate </button>
                                        <button class="btn btn-default" onclick="window.history.back();" type="button"> Back </button>
                                    </footer>

                                    <fieldset>
                                        <div class="row">
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Company, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-user"></i>
                                                    @Html.EditorFor(model => model.Company)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Company)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Address1, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.Address1)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Address1)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Address2, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.Address2)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Address2)
                                            </section>
                                        </div>

                                        <div class="row">

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Phone, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-phone"></i>
                                                    @Html.EditorFor(model => model.Phone)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Phone)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Fax, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-fax"></i>
                                                    @Html.EditorFor(model => model.Fax)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Fax)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Status, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.EnumDropDownListFor(model => model.Status)
                                                </label>
                                            </section>
                                        </div>

                                        <div class="row">
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.City, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.City)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.City)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.PostalCode, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.PostalCode)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.PostalCode)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Country, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.DropDownList("CountryId", new SelectList(ViewBag.Countries, "Id", "Name", Model.CountryId), new { @id = "countrylist", @class = "select2" })
                                                </label>
                                            </section>

                                        </div>

                                        <div class="row">

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.State, new { @class = "label" })
                                                <div id="stateDiv">
                                                    @if (states.Count() > 0)
                                                    {
                                                        <label class="select">
                                                            <i></i>
                                                            @Html.DropDownListFor(m => m.State, new SelectList(states, "StateCode", "StateName", Model.State), new { @class = "select2" })
                                                        </label>
                                                    }
                                                    else
                                                    {
                                                        <label class="input">
                                                            <i class="icon-append fa fa-map-marker"></i>
                                                            @Html.EditorFor(m => m.State)
                                                        </label>
                                                    }
                                                </div>
                                            </section>

                                        </div>

                                    </fieldset>
                                }



                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->



                </article>
                <!-- END COL -->

            </div>
        </div>

    </div>

</section>


 <script type="text/javascript">
        // DO NOT REMOVE : GLOBAL FUNCTIONS!
        pageSetUp();
        
        // PAGE RELATED SCRIPTS

        updateBreadCrumb('Affiliate/Edit');

        $('#submit_button').click(function (e) {
            e.preventDefault();
            var f = this.form;
            container = $('#content');
            $.validator.unobtrusive.parse($(f)); // this may be placed better! OJO
            if ($(f).valid()) {
                pajaxSubmit(f, container, '@ViewBag.hash');
            }
            return false; // keeps the page from not refreshing 
        });

     $('#countrylist').change(function () {
         $.getJSON('/account/getstates/' + $('#countrylist').val(), null, function (data) {
             if (data.length > 0) {
                 var combo = document.getElementById('statelist');

                 if (combo == null) {
                     var div = $('#stateDiv');
                     combo = '<label class="select"> <i></i><select name="State">'
                     $.each(data, function (i, item) {
                         combo = combo + '<option value="' + item.StateCode + '">' + item.StateName + '</option>'
                     });
                     combo = combo + '</select></label>';
                     div.html(combo);
                 }

                 else {
                     while (combo.options.length > 0) {
                         combo.options[combo.options.length - 1] = null;
                     }

                     $.each(data, function (i, item) {
                         combo.options[i] = new Option();
                         combo.options[i].text = item.StateName;
                         combo.options[i].value = item.StateCode;
                     });
                 }
             }
             else {
                 var div = $('#stateDiv');
                 div.html('<label class="input"> <i></i><input name="State" type="text" value="" /></label>');
             }
         });
     });

</script>
