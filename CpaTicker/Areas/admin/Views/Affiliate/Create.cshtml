@model CpaTicker.Areas.admin.Classes.Affiliate

@{
    ViewBag.hash = Url.Action("Index");
    Layout = null;
    IQueryable<CpaTicker.Areas.admin.Classes.State> states = ViewBag.States;
}

<div class="row tspark">
    @Html.Partial("_Sparks")
</div>

<section id="widget-grid">

    <div class="row">

        <div class="table-section col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="table-content">
                <div class="table-title">Create New Affiliate</div>

                <!-- NEW COL START -->
                <article>

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">

                                @using (Html.BeginForm("create", "affiliate", FormMethod.Post, new { @id = "createaffiliate", @class = "smart-form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)

                                    <footer>
                                        <nav>
                                            <button class="btn btn-primary" type="submit" id="submit_button"> <i class="fa fa-check"></i> Create Affiliate </button>
                                            @Html.ActionLink("Back", "index", null, new { @class = "btn btn-default", @id = "back_button" })
                                        </nav>
                                    </footer>

                                    <fieldset>
                                        <div class="row">
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Company, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-user"></i>
                                                    @Html.EditorFor(model => model.Company)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Company)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Address1, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.Address1)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Address1)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Address2, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.Address2)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Address2)
                                            </section>
                                        </div>

                                        <div class="row">

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Phone, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-phone"></i>
                                                    @Html.EditorFor(model => model.Phone)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Phone)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Fax, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-fax"></i>
                                                    @Html.EditorFor(model => model.Fax)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Fax)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Status, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.EnumDropDownListFor(model => model.Status)
                                                </label>
                                            </section>
                                        </div>

                                        <div class="row">
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.City, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.City)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.City)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.PostalCode, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.PostalCode)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.PostalCode)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Country, new { @class = "label" })
                                                @*<label class="input"> <i class="icon-append fa fa-map-marker "></i>
                                                        @Html.EditorFor(model => model.Country)
                                                    </label>*@
                                                <label class="select">
                                                    <i></i>
                                                    @Html.DropDownList("CountryId", new SelectList(ViewBag.Countries, "Id", "Name", 228), new { @id = "countrylist", @class = "select2" })
                                                </label>
                                            </section>
                                        </div>

                                        <div class="row">

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.State, new { @class = "label" })
                                                <div id="stateDiv">
                                                    @if (states.Count() > 0)
                                                    {
                                                        <label class="select">
                                                            <i></i>
                                                            @Html.DropDownListFor(m => m.State, new SelectList(states, "StateCode", "StateName"), new { @class = "select2" })
                                                        </label>
                                                    }
                                                    else
                                                    {
                                                        <label class="input">
                                                            <i class="icon-append fa fa-map-marker"></i>
                                                            @Html.EditorFor(m => m.State)
                                                        </label>
                                                    }
                                                </div>

                                                @Html.ValidationMessageFor(model => model.State)
                                            </section>

                                        </div>

                                    </fieldset>

                                }

                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->

                </article>
                <!-- END COL -->

            </div>
        </div>
            <!-- END ROW -->

    </div>

</section>

<script type="text/javascript">
    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    pageSetUp();

    // PAGE RELATED SCRIPTS
    updateBreadCrumb('Affiliate/Create');

    $('#submit_button').click(function (e) {
        e.preventDefault();
        var f = this.form;
        container = $('#content');
        $.validator.unobtrusive.parse($(f)); // this may be placed better! OJO
        if ($(f).valid()) {
            if (ValidateFields()) {
                pajaxSubmit(f, container, '@ViewBag.hash');
            }

        }
        return false; // keeps the page from not refreshing
    });

    $("#stateDiv select").append("<option value=0>Select</option>");
    $("#stateDiv option").each(function () {
        if ($(this).val() == "0") {
            $(this).attr('selected', 'selected');
        }
    });
    $('#countrylist').change(function () {
        $.getJSON('/account/getstates/' + $('#countrylist').val(), null, function (data) {
            if (data.length > 0) {
                var combo = document.getElementById('statelist');

                if (combo == null) {
                    var div = $('#stateDiv');
                    combo = '<label class="select"> <i></i><select id="State" name="State">'
                    $.each(data, function (i, item) {
                        if (i == 0)
                        { combo = combo + '<option value=0>Select</option>' }
                        combo = combo + '<option value="' + item.StateCode + '">' + item.StateName + '</option>'
                    });
                    combo = combo + '</select></label>';
                    div.html(combo);
                }
                else {
                    while (combo.options.length > 0) {
                        combo.options[combo.options.length - 1] = null;
                    }

                    $.each(data, function (i, item) {
                        combo.options[i] = new Option();
                        combo.options[i].text = item.StateName;
                        combo.options[i].value = item.StateCode;
                    });
                }
            }
            else {
                var div = $('#stateDiv');
                div.html('<label class="input"> <i></i><input name="State" type="text" value="" /></label>');
            }
        });
    });

    function ValidateFields() {
        var flagCompany = true;
        var flagAddress1 = true;
        var flagPhone = true;
        var flagCity = true;
        var flagState = true;
        var flagPostalCode = true;
        if ($("#Company").val() == "")
        { $("#Company").parent().parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The Company field is required.</span>'); flagCompany = false; }
        else
        { $("#Company").parent().parent().children().closest('span').html(''); flagCompany = true; }

        if ($("#Address1").val() == "")
        { $("#Address1").parent().parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The Address1 field is required.</span>'); flagAddress1 = false; }
        else
        { $("#Address1").parent().parent().children().closest('span').html(''); flagAddress1 = true; }

        if ($("#Phone").val() == "")
        { $("#Phone").parent().parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The Phone field is required.</span>'); flagPhone = false; }
        else
        { $("#Phone").parent().parent().children().closest('span').html(''); flagPhone = true; }

        if ($("#City").val() == "")
        { $("#City").parent().parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The City field is required.</span>'); flagCity = false; }
        else
        { $("#City").parent().parent().children().closest('span').html(''); flagCity = true; }

        if ($("#State").val() == "0")
        {
            $("#stateDiv").parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The State field is required.</span>'); flagState = false;
        }
        else
        { $("#stateDiv").parent().children().closest('span').html(''); flagState = true; }

        if ($("#PostalCode").val() == "")
        { $("#PostalCode").parent().parent().children().closest('span').html('<span for="UserName" style="color:red;" generated="true" class="">The PostalCode field is required.</span>'); flagPostalCode = false; }
        else
        { $("#PostalCode").parent().parent().children().closest('span').html(''); flagPostalCode = true; }

        if (flagCompany == true && flagAddress1 == true && flagPhone == true && flagCity == true && flagState == true && flagPostalCode == true)
        { return true; }
        else {
            return false;
        }

    }
</script>