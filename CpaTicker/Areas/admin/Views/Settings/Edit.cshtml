@model CpaTicker.Areas.admin.Models.EditModel

@{
    Layout = null;
    IEnumerable<TimeZoneInfo> TimeZones = TimeZoneInfo.GetSystemTimeZones();
    bool countryhasstate = CPAHelper.CountryHasStates(Model.SelectedCountry);
    ViewBag.hash = Url.Action("Index");
}


<div class="row tspark">
	@Html.Partial("_Sparks")
</div>

<section id="widget-grid">

    <div class="row">

        <div class="table-section col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="table-content">
                <div class="table-title">Edit Customer</div>

                <!-- NEW COL START -->
                <article>

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->
                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">

                                @using (Html.BeginForm("edit", "settings", FormMethod.Post, new { @id = "editcustomer", @class = "smart-form" }))
                                {
                                    @*@Html.AntiForgeryToken()*@

                                    <footer>
                                        <nav>
                                            <button class="btn btn-primary" type="submit" id="submit_button"><i class="fa fa-save"></i> Save</button>
                                            @Html.ActionLink("Back", "index", null, new { @class = "btn btn-default", @id = "back_button" })
                                        </nav>
                                    </footer>

                                    @Html.ValidationSummary(true)

                                    <div class="fieldset">
                                        <div class="row">
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.CompanyName, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-user"></i>
                                                    @Html.EditorFor(model => model.CompanyName)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.CompanyName)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.FirstName, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.FirstName)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.FirstName)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.LastName, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.LastName)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.LastName)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.TransactionIdType, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.DropDownListFor(model => model.TransactionIdType, Model.TransactionIdType.ToSelectList())
                                                </label>
                                            </section>

                                            @*</div>*@

                                            @* <div class="row">*@

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Phone, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-phone"></i>
                                                    @Html.EditorFor(model => model.Phone)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Phone)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Email, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-envelope"></i>
                                                    @Html.EditorFor(model => model.Email)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Email)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.SelectedCountry, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.DropDownListFor(m => m.SelectedCountry, Model.CountryList, new { @id = "countrylist" })
                                                </label>
                                            </section>
                                            @*</div>

                                                <div class="row">*@
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.City, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.City)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.City)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Address, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-home"></i>
                                                    @Html.EditorFor(model => model.Address)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Address)
                                            </section>

                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Zip, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-map-marker "></i>
                                                    @Html.EditorFor(model => model.Zip)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.Zip)
                                            </section>

                                            @*</div>

                                                <div class="row">*@
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.CreditCardNumber, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-map-marker"></i>
                                                    @Html.EditorFor(model => model.CreditCardNumber)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.CreditCardNumber)
                                            </section>
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.TimeZone, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.DropDownListFor(model => model.TimeZone, new SelectList(TimeZones, "Id", "DisplayName"))
                                                </label>
                                            </section>
                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.SelectedState, new { @class = "label" })
                                                <div id="stateDiv">
                                                    @if (countryhasstate)
                                                    {
                                                        <label class="select">
                                                            <i></i>
                                                            @Html.DropDownListFor(m => m.SelectedState, Model.StateList, new { @id = "statelist" })
                                                        </label>
                                                    }
                                                    else
                                                    {
                                                        <label class="input">
                                                            <i class="icon-append fa fa-map-marker"></i>
                                                            @Html.EditorFor(m => m.SelectedState, new { @id = "statetextbox" })
                                                        </label>
                                                    }

                                                </div>

                                            </section>

                                            @*</div>
                                                <div class="row">*@
                                            <section class="col col-4">
                                                <label class="label">Card Expiration Date (month / year)</label>
                                                <div class="row">
                                                    <section class="col col-6">
                                                        <label class="select">
                                                            <i></i>
                                                            @Html.DropDownListFor(model => model.CreditCardExpMonth, Model.MonthList)
                                                        </label>
                                                    </section>
                                                    <section class="col col-6">
                                                        <label class="select">
                                                            <i></i>
                                                            @Html.DropDownListFor(model => model.CreditCardExpYear, Model.YearList)
                                                        </label>
                                                    </section>
                                                </div>
                                            </section>



                                            <section class="col col-4">
                                                @Html.LabelFor(model => model.Level, new { @class = "label" })
                                                <label class="select">
                                                    <i></i>
                                                    @Html.EnumDropDownListFor(model => model.Level)
                                                </label>
                                            </section>





                                        </div>
                                        <div class="row">

                                            <section class="col col-4">
                                                @*   <label class="label"> &nbsp;</label>*@

                                                <label class="toggle">
                                                    <input type="checkbox" id="api" name="hasapi" @( Model.HasAPIKey ? "checked" : string.Empty)>
                                                    <i data-swchoff-text="NO" data-swchon-text="YES"></i>
                                                    APIKey
                                                </label>

                                                <label class="checkbox" id="send" style="display: none;">
                                                    <input type="checkbox" name="send" @(Model.SendEmail ? "checked" : string.Empty)>
                                                    <i></i>
                                                    Send the key by e-mail
                                                </label>

                                            </section>

                                        </div>
                                    </div>

                                }



                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->



                </article>
                <!-- END COL -->

            </div>
        </div>

    </div>

</section>

<script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    pageSetUp();

    // PAGE RELATED SCRIPTS
    updateBreadCrumb('Settings/Edit Customer');

    container = $('#content');
    $.validator.unobtrusive.parse(container);

    $('#submit_button').click(function (e) {
        var f = this.form;
        container = $('#content');
        //$.validator.unobtrusive.parse($(f)); // this may be placed better! OJO
        if ($(f).valid()) {
            pajaxSubmit(f, container, '@ViewBag.hash');
        }
        //e.preventDefault();
        return false; // keeps the page from not refreshing 
    });


    $('#api').change(function (e) {
        
        if ($(this).is(":checked")) {
            $('#send').fadeIn();
        }
        else {
            $('#send').fadeOut();
        }
    });

    
        $('#countrylist').change(function () {
            $.getJSON('/account/getstates/' + $('#countrylist').val(), null, function (data) {
                if (data.length > 0) {
                    var combo = document.getElementById('statelist');

                    if (combo == null) {
                        var div = $('#stateDiv');
                        combo = '<label class="select"> <i></i><select name="SelectedState">'
                        $.each(data, function (i, item) {
                            combo = combo + '<option value="' + item.StateCode + '">' + item.StateName + '</option>'
                        });
                        combo = combo + '</select></label>';
                        div.html(combo);
                    }

                    else {
                        while (combo.options.length > 0) {
                            combo.options[combo.options.length - 1] = null;
                        }

                        $.each(data, function (i, item) {
                            combo.options[i] = new Option();
                            combo.options[i].text = item.StateName;
                            combo.options[i].value = item.StateCode;
                        });
                    }
                }
                else {
                    var div = $('#stateDiv');
                    div.html('<label class="input"> <i></i><input name="SelectedState" type="text" value="" /></label>');
                }
            });
        });
   
    </script>

