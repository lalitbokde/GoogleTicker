@model CpaTicker.Areas.admin.Classes.TickerSetting

@{
    ViewBag.Title = "Settings";
}

<div class="row tspark">
	<div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
		<h1 class="page-title txt-color-blueDark">
			<i class="fa fa-gears fa-fw"></i>
                @Html.ActionLink("Ticker", "index")
			<span>> 
				@ViewBag.Title
			</span>
		</h1>
	</div>
	@Html.Partial("_Sparks")
</div>

<section id="widget-grid" class="">

	<!-- START ROW -->

	<div class="row">

		<!-- NEW COL START -->
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
			
			<!-- Widget ID (each widget will need unique ID)-->
			<div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
				
				<header>
					<span class="widget-icon"> <i class="fa fa-edit"></i> </span>
					<h2>Ticker Settings</h2>				
				</header>

				<!-- widget div-->
				<div>
					
					<!-- widget content -->
					<div class="widget-body no-padding">

                        @using (Html.BeginForm("settings", "ticker", FormMethod.Post, new { @id = "tksettings", @class = "smart-form" }))
                        { 
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)

                            @Html.HiddenFor(model => model.UserId)

                            <footer>
                                <nav>
                                    <button class="btn btn-primary" type="submit" id="submit_button"><i class="fa fa-save"></i> Save</button>
                                    
                                    @Html.ActionLink("Back", "index", null, new { @class = "btn btn-default", @id = "back_button" })
                                </nav>
                                @Html.ActionLink("Set Default", "defaultcolors", "helper", null, new { @class = "btn btn-warning rlink", @id = "default_button" })
                            </footer>
                            
                            <div class="fieldset">
                               @* <div class="row">*@
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.BackgroundColor, new { @class="label"})
                                        <label class="input">
                                           @Html.TextBoxFor(model => model.BackgroundColor, new { @class = "clpk"})
                                           <i class="icon-append fa fa-tint"></i>
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.CampaignColor, new { @class="label"})
                                        <label class="input">
                                            <i class="icon-append fa fa-tint"></i>
                                            @Html.TextBoxFor(model => model.CampaignColor, new { @class = "clpk"})
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.ImpressionColor, new { @class="label"})
                                        <label class="input">
                                            <i class="icon-append fa fa-tint"></i>
                                            @Html.TextBoxFor(model => model.ImpressionColor, new { @class = "clpk"})
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.ClickColor, new { @class="label"})
                                        <label class="input">
                                            <i class="icon-append fa fa-tint"></i>
                                            @Html.TextBoxFor(model => model.ClickColor, new { @class = "clpk"})
                                        </label>
                                    </section>
                                @*</div>
                                <div class="row">*@
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.ConversionColor, new { @class="label"})
                                        <label class="input">
                                            @Html.TextBoxFor(model => model.ConversionColor, new { @class = "clpk"})
                                            <i class="icon-append fa fa-tint"></i>
                                        </label>
                                    </section>
                                    @*<section class="col col-3">
                                        @Html.LabelFor(model => model.CostColor, new { @class="label"})
                                        <label class="input">
                                            <i class="icon-append fa fa-tint"></i>
                                            @Html.TextBoxFor(model => model.CostColor, new { @class = "clpk"})
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        @Html.LabelFor(model => model.RevenueColor, new { @class="label"})
                                        <label class="input">
                                            <i class="icon-append fa fa-tint"></i>
                                            @Html.TextBoxFor(model => model.RevenueColor, new { @class = "clpk"})
                                        </label>
                                    </section>*@
                                @*</div>*@
                            </div>
                        }

					</div>
					<!-- end widget content -->
					
				</div>
				<!-- end widget div -->
				
			</div>
			<!-- end widget -->

		</article>
		<!-- END COL -->

	</div>

	<!-- END ROW -->

</section>

<script type="text/javascript">
    
    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    pageSetUp();

    // PAGE RELATED SCRIPTS
    updateBreadCrumb('Ticker Settings');

    $('#submit_button').click(function (e) {
        e.preventDefault();
        var f = this.form;
        container = $('#content');
        pajaxSubmit(f, container, ''); // not necessary set the hash since i want to keep in the same page
        // refresh ticker color
        //$('.tickerContainer').css('backgroundColor', $('#BackgroundColor').val());
        
        // edit the variables
        $.bgcolor = $('#BackgroundColor').val();
        $.cpcolor = $('#CampaignColor').val();
        $.imcolor = $('#ImpressionColor').val();
        $.ckcolor = $('#ClickColor').val();
        $.cvcolor = $('#ConversionColor').val();
        $.ctcolor = $('#CostColor').val();
        $.rvcolor = $('#RevenueColor').val();

        // update the ticker color
        $('.tickerContainer').css('backgroundColor', $.bgcolor);
        setTickerColors();
        return false; // keeps the page from not refreshing 
    });

    $('.rlink').click(function (e) {
        e.preventDefault();
        //doAjax = 0;
        url = $(this).attr('href');
        container = $('#content');
        loadURL(url, container);

        // edit the variables
        $.bgcolor = $('#BackgroundColor').val();
        $.cpcolor = $('#CampaignColor').val();
        $.imcolor = $('#ImpressionColor').val();
        $.ckcolor = $('#ClickColor').val();
        $.cvcolor = $('#ConversionColor').val();
        $.ctcolor = $('#CostColor').val();
        $.rvcolor = $('#RevenueColor').val();

        // update the ticker color
        $('.tickerContainer').css('backgroundColor', $.bgcolor);
        setTickerColors();
        //doAjax = 1;
        return false; // keeps the page from not refreshing 
    });

    loadScript("@Url.Content("~/Content/js/plugin/colorpicker/bootstrap-colorpicker.min.js")", function () {
        $('.clpk').each(function () {
            var $this = $(this);
            $this.colorpicker();
        });
    });

</script>