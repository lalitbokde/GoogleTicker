@model CpaTicker.Areas.admin.Classes.Campaign

@{
    Layout = null;
    ViewBag.hash = Url.Action("Index");
}

<div class="row tspark">
	@Html.Partial("_Sparks")
</div>

<section id="widget-grid">

    <div class="row">

        <div class="table-section col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="table-content">
                <div class="table-title">Edit Campaign <strong>@Model.CampaignId</strong></div>

                <!-- NEW COL START -->
                <article>

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">

                                @using (Html.BeginForm("edit", "campaign", FormMethod.Post, new { @id = "editcampaign", @class = "smart-form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)

                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.CampaignId)
                                    @Html.HiddenFor(model => model.CustomerId)

                                    <footer>
                                        <nav>
                                            <button class="btn btn-primary" type="submit" id="submit_button"><i class="fa fa-save"></i> Save Campaign</button>
                                            @Html.ActionLink("Back", "index", null, new { @class = "btn btn-default", @id = "back_button" })
                                        </nav>
                                    </footer>

                                    <div class="fieldset">

                                        <div class="row">

                                            <section class="col col-3">
                                                @Html.LabelFor(model => model.CampaignName, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-user"></i>
                                                    @Html.TextBoxFor(model => model.CampaignName)
                                                </label>
                                                @Html.ValidationMessageFor(model => model.CampaignName)
                                            </section>

                                            <section class="col col-3">
                                                @Html.LabelFor(model => model.ExpirationDate, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-calendar"></i>
                                                    @Html.TextBoxFor(model => model.ExpirationDate, new { @id = "expdate", @class = "datepicker" })
                                                </label>
                                            </section>

                                            <section class="col col-3">
                                                @Html.LabelFor(model => model.Status, new { @class = "label" })
                                                <label class="select">
                                                    @Html.EnumDropDownListFor(model => model.Status)
                                                    <i></i>
                                                </label>
                                            </section>

                                            @* Cookie expiration *@
                                            <section class="col col-3">
                                                @Html.LabelFor(model => model.CookieExpirationInDays, new { @class = "label" })
                                                <label class="input">
                                                    <i class="icon-append fa fa-history"></i>
                                                    @Html.TextBoxFor(model => model.CookieExpirationInDays, new { @id = "cookieExpiry" })
                                                </label>
                                            </section>

                                        </div>
                                    </div>

                                    <fieldset>
                                        <legend>
                                            GeoTargets
                                            <label class="toggle">
                                                <input type="checkbox" name="geoenforce" id="enforce" @if (Model.Enforce) { @: checked="checked"
                                                       	                                        }>
                                                <i data-swchoff-text="OFF" data-swchon-text="ON"></i>
                                                enforce
                                            </label>
                                        </legend>

                                        <section>
                                            <label class="label">Banned Countries</label>
                                            <label class="select">
                                                <select name="ct" id="ct" multiple class="select2" @( Model.Enforce ? string.Empty : "disabled")>
                                                    @foreach (var item in ViewBag.Countries)
                                                    {
                                                        <option value="@item.Code" @(item.Checked ? "selected" : string.Empty)>@item.Name</option>
                                                    }
                                                </select>
                                                @*@Html.DropDownList("ct", new SelectList(ViewBag.Countries, "Code", "Name"), new { @multiple = "multiple", @class = "select2" })*@
                                            </label>
                                            <div class="note">
                                                <i class="fa fa-warning"></i>
                                                Banned countries if enforced is 'on' then no click will be created from this countries.
                                            </div>
                                        </section>


                                        @*@foreach (var item in ViewBag.Countries)
                                            {
                                                <section class="col col-4">
                                                    @Html.CheckBoxSmart("ct", (string)item.Name, (string)item.Code, (bool)item.Checked)
                                                </section>
                                            }*@
                                    </fieldset>

                                    <div class="fieldset">
                                        <section>
                                            @Html.LabelFor(model => model.Description, new { @class = "label" })
                                            <label class="textarea">
                                                <i class="icon-append fa fa-comment"></i>
                                                @Html.TextAreaFor(model => model.Description, new { @placeholder = "Campaign Description goes here..." })<br />
                                            </label>
                                        </section>
                                    </div>

                                    @*@Html.HiddenFor(model => model.OfferUrl)
                                        @Html.HiddenFor(model => model.PreviewUrl)
                                        @Html.HiddenFor(model => model.Payout)
                                        @Html.HiddenFor(model => model.PayoutPercent)
                                        @Html.HiddenFor(model => model.PayoutType)
                                        @Html.HiddenFor(model => model.TrackingType)
                                        @Html.HiddenFor(model => model.Revenue)
                                        @Html.HiddenFor(model => model.RevenuePercent)
                                        @Html.HiddenFor(model => model.RevenueType)*@


                                    @Html.Action("DisplayCustomFieldValues", "helper", new { campaignid = Model.Id, customerid = Model.CustomerId })



                                }



                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->



                </article>
                <!-- END COL -->

            </div>
        </div>

    </div>

</section>

 <script type="text/javascript">
        // DO NOT REMOVE : GLOBAL FUNCTIONS!
        pageSetUp();
        
        // PAGE RELATED SCRIPTS

        updateBreadCrumb('Campaign/Edit');

        $('#submit_button').click(function (e) {
            e.preventDefault();
            var f = this.form;
            container = $('#content');
            $.validator.unobtrusive.parse($(f)); // this may be placed better! OJO
            if ($(f).valid()) {
                $('#ct').prop('disabled', false);
                pajaxSubmit(f, container, '@ViewBag.hash');
            }
            return false; // keeps the page from not refreshing 
        });


     $('#enforce').change(function () {
         if (this.checked) {
             $('#ct').prop('disabled', false);
         }
         else
             $('#ct').prop('disabled', 'disabled');
     });

</script>




